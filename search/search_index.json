{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"rayyaw's website About Me Computer Science graduate Open source contributor Timezone: US Central Primary Interests Anything coding related! GPU and high performance computing (OpenCL, CUDA) Deep Learning (PyTorch/Python, C++, computer vision, neural network verification) API, Web, and Mobile Development (frontend + backend, Linux, TypeScript + React, Java/Kotlin, Android, iOS) Full CI/CD enthusiast (ask me about full CI/CD initiatives in my projects) Contact For business inquiries, please reach out to rayyawspeedruns@gmail.com . If you encounter a bug with one of my projects, please open an issue on the appropriate GitHub project. You can find my GitHub page here . Licensing Unless otherwise specified, the source code and binaries for my coding projects have all rights reserved. Most of my projects are Creative Commons licensed. To locate licensing information for a specific project, check the README file on the GitHub page, or the appropriate LICENSE file. If you need a more permissive license than the one I provide, please reach out via email and we can work out an agreement. Identity verification If someone is claiming ownership of my work, please reach out via email to confirm their identity.","title":"Home"},{"location":"#rayyaws-website","text":"","title":"rayyaw's website"},{"location":"#about-me","text":"Computer Science graduate Open source contributor Timezone: US Central","title":"About Me"},{"location":"#primary-interests","text":"Anything coding related! GPU and high performance computing (OpenCL, CUDA) Deep Learning (PyTorch/Python, C++, computer vision, neural network verification) API, Web, and Mobile Development (frontend + backend, Linux, TypeScript + React, Java/Kotlin, Android, iOS) Full CI/CD enthusiast (ask me about full CI/CD initiatives in my projects)","title":"Primary Interests"},{"location":"#contact","text":"For business inquiries, please reach out to rayyawspeedruns@gmail.com . If you encounter a bug with one of my projects, please open an issue on the appropriate GitHub project. You can find my GitHub page here .","title":"Contact"},{"location":"#licensing","text":"Unless otherwise specified, the source code and binaries for my coding projects have all rights reserved. Most of my projects are Creative Commons licensed. To locate licensing information for a specific project, check the README file on the GitHub page, or the appropriate LICENSE file. If you need a more permissive license than the one I provide, please reach out via email and we can work out an agreement.","title":"Licensing"},{"location":"#identity-verification","text":"If someone is claiming ownership of my work, please reach out via email to confirm their identity.","title":"Identity verification"},{"location":"coding/projects/","text":"Coding Projects You can find the vast majority of my coding projects on my GitHub . Here are the ones I'm most proud of and/or use most frequently. Flash Patching Utility This utility uses the simple Patchfile language to allow you to inject arbitrary ActionScript code into .swf files. Source code, instructions, and download. Robust CNN training I have done a significant amount of work on training machine learning models that are robust to noise, especially in the domain of computer vision. View the Jupyter Notebook , which contains both the code and results of some of my analyses. APLSA APLSA is an accelerated version of the PLSA machine learning algorithm, implemented for topic mining. My version uses C++ with OpenCL for GPU acceleration. View the source code and instructions . RiLab RiLab is a CPU multithreaded theorem proving software. Download the latest release here , or view the source code . Wordle Discord Bot This Discord bot uses short-term memory in order to play Wordle, but is otherwise stateless. If you're interested in self-hosting this application, you can view the source code and instructions . Minecraft Computer I have built a working computer in Minecraft: Bedrock Edition, based off of the MIPS ISA. This computer runs at about 0.04 Hz, with an instruction memory of 256 B and a register file of 252 B. Miscellaneous Utilities This GitHub page contains various utilities, and may be updated if I make new ones. As of the making of this website, you can find the following: Randomized music selection from local .mp3 files Recursive line counting utility, which is handy when your code is split across multiple files","title":"Projects"},{"location":"coding/projects/#coding-projects","text":"You can find the vast majority of my coding projects on my GitHub . Here are the ones I'm most proud of and/or use most frequently.","title":"Coding Projects"},{"location":"coding/projects/#flash-patching-utility","text":"This utility uses the simple Patchfile language to allow you to inject arbitrary ActionScript code into .swf files. Source code, instructions, and download.","title":"Flash Patching Utility"},{"location":"coding/projects/#robust-cnn-training","text":"I have done a significant amount of work on training machine learning models that are robust to noise, especially in the domain of computer vision. View the Jupyter Notebook , which contains both the code and results of some of my analyses.","title":"Robust CNN training"},{"location":"coding/projects/#aplsa","text":"APLSA is an accelerated version of the PLSA machine learning algorithm, implemented for topic mining. My version uses C++ with OpenCL for GPU acceleration. View the source code and instructions .","title":"APLSA"},{"location":"coding/projects/#rilab","text":"RiLab is a CPU multithreaded theorem proving software. Download the latest release here , or view the source code .","title":"RiLab"},{"location":"coding/projects/#wordle-discord-bot","text":"This Discord bot uses short-term memory in order to play Wordle, but is otherwise stateless. If you're interested in self-hosting this application, you can view the source code and instructions .","title":"Wordle Discord Bot"},{"location":"coding/projects/#minecraft-computer","text":"I have built a working computer in Minecraft: Bedrock Edition, based off of the MIPS ISA. This computer runs at about 0.04 Hz, with an instruction memory of 256 B and a register file of 252 B.","title":"Minecraft Computer"},{"location":"coding/projects/#miscellaneous-utilities","text":"This GitHub page contains various utilities, and may be updated if I make new ones. As of the making of this website, you can find the following: Randomized music selection from local .mp3 files Recursive line counting utility, which is handy when your code is split across multiple files","title":"Miscellaneous Utilities"},{"location":"coding/setup/","text":"Coding setup I currently have two computers I use for coding. One is setup with Windows and has a latest-generation GPU (as of 2023), and the other has Linux (Debian + KDE). My Linux computer has no GPU and is much more portable, so I use it for everything except high performance computing and Windows-specific applications. Platform I use Windows + WSL and Linux (Debian + KDE) interchangeably, depending on the circumstances. For my recent projects, I try to add cross-platform support, although this isn't always possible. Going forward, I plan to use Linux to develop any non-GPU applications, and Windows with either MinGW or WSL to develop GPU code. Editor When editing code, I use Visual Studio Code . I also use Neovim with NVChad occasionally, but I find it makes me less productive. Deployment All of my code is published through GitHub , and I use the command line to build and run all of my projects. Most of my projects have a Makefile and some unit tests, as well as documentation on how to build and run the project. This website is hosted through GitHub Pages . Computer Specs This is probably the least important aspect of my development environment, but I've chosen to include it for compatibility reasons. Linux Computer OS: Linux Distribution: Debian Desktop Environment: KDE Plasma Package Manager: Flatpak (preferred for graphical applications) or apt RAM: 16GB Internal Storage: 512GB SSD CPU: Intel i7 9th generaion Windows Computer OS: Windows 11 Package Manager: Microsoft Store (preferred), winget , or none RAM: 32GB DDR5 Internal Storage: 2TB SSD CPU: AMD Ryzen 9 6900 GPU: AMD Radeon 6850","title":"Setup"},{"location":"coding/setup/#coding-setup","text":"I currently have two computers I use for coding. One is setup with Windows and has a latest-generation GPU (as of 2023), and the other has Linux (Debian + KDE). My Linux computer has no GPU and is much more portable, so I use it for everything except high performance computing and Windows-specific applications.","title":"Coding setup"},{"location":"coding/setup/#platform","text":"I use Windows + WSL and Linux (Debian + KDE) interchangeably, depending on the circumstances. For my recent projects, I try to add cross-platform support, although this isn't always possible. Going forward, I plan to use Linux to develop any non-GPU applications, and Windows with either MinGW or WSL to develop GPU code.","title":"Platform"},{"location":"coding/setup/#editor","text":"When editing code, I use Visual Studio Code . I also use Neovim with NVChad occasionally, but I find it makes me less productive.","title":"Editor"},{"location":"coding/setup/#deployment","text":"All of my code is published through GitHub , and I use the command line to build and run all of my projects. Most of my projects have a Makefile and some unit tests, as well as documentation on how to build and run the project. This website is hosted through GitHub Pages .","title":"Deployment"},{"location":"coding/setup/#computer-specs","text":"This is probably the least important aspect of my development environment, but I've chosen to include it for compatibility reasons.","title":"Computer Specs"},{"location":"coding/setup/#linux-computer","text":"OS: Linux Distribution: Debian Desktop Environment: KDE Plasma Package Manager: Flatpak (preferred for graphical applications) or apt RAM: 16GB Internal Storage: 512GB SSD CPU: Intel i7 9th generaion","title":"Linux Computer"},{"location":"coding/setup/#windows-computer","text":"OS: Windows 11 Package Manager: Microsoft Store (preferred), winget , or none RAM: 32GB DDR5 Internal Storage: 2TB SSD CPU: AMD Ryzen 9 6900 GPU: AMD Radeon 6850","title":"Windows Computer"}]}